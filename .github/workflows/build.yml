name: "Build"

on:
  workflow_dispatch:
  push:
    branches:
      - '*'

jobs:
  build:
    name: "Build for ${{ matrix.os }} ${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: i686-pc-windows-msvc
            artifact_name: "mbf-bridge-windows-x86"
            artifact_path: "target/i686-pc-windows-msvc/release/mbf_bridge.exe"

          - os: windows-latest
            arch: x86_64-pc-windows-msvc
            artifact_name: "mbf-bridge-windows-x64"
            artifact_path: "target/x86_64-pc-windows-msvc/release/mbf_bridge.exe"

          - os: ubuntu-latest
            arch: x86_64-unknown-linux-gnu
            artifact_name: "mbf-bridge-linux-x64"
            artifact_path: "target/x86_64-unknown-linux-gnu/release/mbf_bridge"

          - os: macos-13
            arch: x86_64-apple-darwin
            artifact_name: "mbf-bridge-macos-universal"
            artifact_path: "ModsBeforeFriday.app"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ matrix.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.os }}-${{ matrix.arch }}-cargo-

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.arch }}

      - name: Install dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev

      - name: Set macOS deployment target (macOS only)
        if: runner.os == 'macOS'
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: |
          if [ "$RUNNER_OS" = "macOS" ]; then
            rustup target add aarch64-apple-darwin

            cargo build --target x86_64-apple-darwin --release
            cargo build --target aarch64-apple-darwin --release

            mkdir -p target/universal-apple-darwin/release

            lipo -create -output target/universal-apple-darwin/release/mbf_bridge \
              target/x86_64-apple-darwin/release/mbf_bridge \
              target/aarch64-apple-darwin/release/mbf_bridge
          else
            cargo build --target ${{ matrix.arch }} --release
          fi

      - name: Prepare macOS app bundle (macOS only)
        if: runner.os == 'macOS'
        run: cp target/universal-apple-darwin/release/mbf_bridge ModsBeforeFriday.app/Contents/MacOS/mbf-bridge

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
